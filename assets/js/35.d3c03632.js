(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{441:function(s,t,a){"use strict";a.r(t);var n=a(56),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"python工匠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python工匠"}},[s._v("#")]),s._v(" Python工匠")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#1-%E5%8F%98%E9%87%8F%E4%B8%8E%E6%B3%A8%E9%87%8A"}},[s._v("1. 变量与注释")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#11-%E7%BB%99%E5%8F%98%E9%87%8F%E6%B3%A8%E6%98%8E%E7%B1%BB%E5%9E%8B"}},[s._v("1.1. 给变量注明类型")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#12-%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E5%8E%9F%E5%88%99"}},[s._v("1.2. 变量命名原则")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#13-%E6%B3%A8%E9%87%8A"}},[s._v("1.3. 注释")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#14-%E4%B8%80%E4%B8%AA%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%9A%84%E4%BE%8B%E5%AD%90"}},[s._v("1.4. 一个冒泡排序的例子")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#15-%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89%E5%B0%BD%E9%87%8F%E9%9D%A0%E8%BF%91%E4%BD%BF%E7%94%A8"}},[s._v("1.5. 变量定义尽量靠近使用")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#16-%E5%AE%9A%E4%B9%89%E4%B8%B4%E6%97%B6%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87%E5%8F%AF%E8%AF%BB%E6%80%A7"}},[s._v("1.6. 定义临时变量提升可读性")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#17-%E5%90%8C%E4%B8%80%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%86%85%E4%B8%8D%E8%A6%81%E6%9C%89%E5%A4%AA%E5%A4%9A%E5%8F%98%E9%87%8F"}},[s._v("1.7. 同一作用域内不要有太多变量")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#18-%E8%83%BD%E4%B8%8D%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E5%B0%B1%E5%88%AB%E5%AE%9A%E4%B9%89"}},[s._v("1.8. 能不定义变量就别定义")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#19-%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8locals"}},[s._v("1.9. 不要使用locals()")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#110-%E7%A9%BA%E8%A1%8C%E4%B9%9F%E6%98%AF%E4%B8%80%E7%A7%8D%E6%B3%A8%E9%87%8A"}},[s._v("1.10. 空行也是一种注释")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#111-%E5%85%88%E5%86%99%E6%B3%A8%E9%87%8A%E5%90%8E%E5%86%99%E4%BB%A3%E7%A0%81"}},[s._v("1.11. 先写注释，后写代码")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#112-%E5%B0%8F%E7%BB%93"}},[s._v("1.12. 小结")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E6%95%B0%E5%80%BC%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2"}},[s._v("数值与字符串")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#3-%E5%AE%B9%E5%99%A8-listtupledictset%E7%AD%89"}},[s._v("3. 容器: list、tuple、dict、set等")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#4-%E8%BE%B9%E7%95%8C%E5%A4%84%E7%90%86"}},[s._v("4. 边界处理")])])]),s._v(" "),a("h2",{attrs:{id:"_1-变量与注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-变量与注释"}},[s._v("#")]),s._v(" 1. 变量与注释")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 去掉 s 两边的空格，再处理")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# value = process(s.strip()) # bad")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用户输入可能会有空格，使用 strip 去掉空格")]),s._v("\nusername "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" extract_username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("input_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# good")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 交换两个变量")]),s._v("\nauthor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reader "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zmf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zmf96"')]),s._v("\n\nauthor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reader "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" reader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" auther\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 变量解包")]),s._v("\nusernames "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zmf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zmf96"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nauthor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reader "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" usernames\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 星号表达式（*variables）作为变量名，它便会贪婪[1]地捕获多个值对象，并将捕获到的内容作为列表赋值给 variables")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'piglei'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'apple'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'orange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'banana'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("fruits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" data\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" username\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'piglei'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" fruits\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'apple'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'orange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'banana'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" score\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 变量解包可以在循环里用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" score "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'piglei'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'raymond'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\npiglei\nraymond\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[s._v("单下划线变量名_\nps: 在python交互式环境中"),a("code",[s._v("_")]),s._v("默认保存着你输入的上个表达式的返回值")]),s._v(" "),a("h3",{attrs:{id:"_1-1-给变量注明类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-给变量注明类型"}},[s._v("#")]),s._v(" 1.1. 给变量注明类型")]),s._v(" "),a("p",[s._v("类型注解\nSphinx格式文档")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove_invalid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""剔除 items 里面无效的元素\n\n    :param items: 待剔除对象\n    :type items: 包含整数的列表，[int, ...]\n    """')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"_1-2-变量命名原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-变量命名原则"}},[s._v("#")]),s._v(" 1.2. 变量命名原则")]),s._v(" "),a("ul",[a("li",[s._v("pep8原则\n"),a("ul",[a("li",[s._v("4个空格缩进")]),s._v(" "),a("li",[s._v("每行不超过79个字符")]),s._v(" "),a("li",[s._v("普通变量: 蛇形命令 max_value")]),s._v(" "),a("li",[s._v("常量： 全大写字母：MAX_VALUE")]),s._v(" "),a("li",[s._v("标记仅内部使用，增加下划线前缀：_local_var")]),s._v(" "),a("li",[s._v("当名字与Python关键字冲突时，末尾追加下划线: class_")]),s._v(" "),a("li",[s._v("类名：FooClass")]),s._v(" "),a("li",[s._v("函数：bar_function")])])]),s._v(" "),a("li",[s._v("描述性要强")]),s._v(" "),a("li",[s._v("要尽量短")]),s._v(" "),a("li",[s._v("要匹配类型\n"),a("ul",[a("li",[s._v("最好别拿一个名词的复数形式来作为int类型的变量名，如apples会与list(apple)混淆")])])]),s._v(" "),a("li",[s._v("超短命名\n"),a("ul",[a("li",[s._v("i、j、k")]),s._v(" "),a("li",[s._v("n")]),s._v(" "),a("li",[s._v("s")]),s._v(" "),a("li",[s._v("e")]),s._v(" "),a("li",[s._v("fp")])])])]),s._v(" "),a("h3",{attrs:{id:"_1-3-注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-注释"}},[s._v("#")]),s._v(" 1.3. 注释")]),s._v(" "),a("ul",[a("li",[s._v("不要用注释屏蔽代码")]),s._v(" "),a("li",[s._v("注释复述代码")]),s._v(" "),a("li",[s._v("接口注释不要写实现细节，着重描述函数的功能、参数说明等")])]),s._v(" "),a("h3",{attrs:{id:"_1-4-一个冒泡排序的例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-一个冒泡排序的例子"}},[s._v("#")]),s._v(" 1.4. 一个冒泡排序的例子")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("magic_bubble_sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""有魔力的冒泡排序算法，默认所有的偶数都比奇数大\n\n    :param numbers: 需要排序的列表，函数将会直接修改原始列表\n    """')]),s._v("\n    stop_position "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" stop_position "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stop_position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" next_ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n            current_is_even"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" next_is_even "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" current "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" next_ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n            should_swap "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 交换位置的两个条件：")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - 前面是偶数，后面是奇数")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - 前面和后面同为奇数或者偶数，但是前面比后面大")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" current_is_even "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" next_is_even"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                should_swap "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" current_is_even "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" next_is_even "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" current "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" next_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                should_swap "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" should_swap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        stop_position "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" numbers\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("h3",{attrs:{id:"_1-5-变量定义尽量靠近使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-变量定义尽量靠近使用"}},[s._v("#")]),s._v(" 1.5. 变量定义尽量靠近使用")]),s._v(" "),a("h3",{attrs:{id:"_1-6-定义临时变量提升可读性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-定义临时变量提升可读性"}},[s._v("#")]),s._v(" 1.6. 定义临时变量提升可读性")]),s._v(" "),a("h3",{attrs:{id:"_1-7-同一作用域内不要有太多变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-同一作用域内不要有太多变量"}},[s._v("#")]),s._v(" 1.7. 同一作用域内不要有太多变量")]),s._v(" "),a("h3",{attrs:{id:"_1-8-能不定义变量就别定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-能不定义变量就别定义"}},[s._v("#")]),s._v(" 1.8. 能不定义变量就别定义")]),s._v(" "),a("h3",{attrs:{id:"_1-9-不要使用locals"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-9-不要使用locals"}},[s._v("#")]),s._v(" 1.9. 不要使用locals()")]),s._v(" "),a("h3",{attrs:{id:"_1-10-空行也是一种注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-10-空行也是一种注释"}},[s._v("#")]),s._v(" 1.10. 空行也是一种注释")]),s._v(" "),a("h3",{attrs:{id:"_1-11-先写注释-后写代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-11-先写注释-后写代码"}},[s._v("#")]),s._v(" 1.11. 先写注释，后写代码")]),s._v(" "),a("h3",{attrs:{id:"_1-12-小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-12-小结"}},[s._v("#")]),s._v(" 1.12. 小结")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("变量和注释决定“第一印象”：")]),s._v(" "),a("ul",[a("li",[s._v("变量和注释是代码里最接近自然语言的东西，它们的可读性非常重要")]),s._v(" "),a("li",[s._v("即使是实现同一个算法，变量和注释不一样，代码给人的感觉会截然不同")])])]),s._v(" "),a("li",[a("p",[s._v("基础知识：")]),s._v(" "),a("ul",[a("li",[s._v("Python 的变量赋值语法非常灵活，可以使用 *variables 星号表达式灵活赋值")])])]),s._v(" "),a("li",[a("p",[s._v("编写注释的两个要点：")]),s._v(" "),a("ul",[a("li",[s._v("“不要用来屏蔽代码”以及“解释为什么”")]),s._v(" "),a("li",[s._v("接口注释是为使用者而写，因此接口注释应该简明扼要的描述函数职责，而不必包含太多内部细节")]),s._v(" "),a("li",[s._v("你可以用 Sphinx 格式文档或类型注解给变量标明类型")])])]),s._v(" "),a("li",[a("p",[s._v("变量名字很重要：")]),s._v(" "),a("ul",[a("li",[s._v("给变量起名要遵循 PEP 8 指南，代码的其他部分也同样如此")]),s._v(" "),a("li",[s._v("尽量给变量起描述性强的名字，但评价描述性也需要结合场景")]),s._v(" "),a("li",[s._v("在保证描述性的前提下，变量名要尽量短")]),s._v(" "),a("li",[s._v("变量名要匹配它所表达的类型")]),s._v(" "),a("li",[s._v("你可以使用一两个字母的超短名字，但注意不要过度")])])]),s._v(" "),a("li",[a("p",[s._v("代码组织技巧：")]),s._v(" "),a("ul",[a("li",[s._v("按照代码的职责来组织代码：让变量定义靠近引用")]),s._v(" "),a("li",[s._v("适当定义临时变量可以提升代码可读性")]),s._v(" "),a("li",[s._v("但不必要的变量反而会让代码显得冗长、啰嗦")]),s._v(" "),a("li",[s._v("同一个作用域内不要有太多变量，解决办法：提炼数据类、拆分函数")]),s._v(" "),a("li",[s._v("空行也是一种特殊的“注释”，适当的空行可以让代码更好读")]),s._v(" "),a("li",[s._v("代码可维护性技巧：")]),s._v(" "),a("li",[s._v("保持变量在两个方面的一致性：名字一致性与类型一致性")]),s._v(" "),a("li",[s._v("显式优于隐式：不要使用 locals() 批量获取变量")]),s._v(" "),a("li",[s._v("把接口注释当成一种函数设计工具，先写注释，后写代码")])])])]),s._v(" "),a("h2",{attrs:{id:"数值与字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值与字符串"}},[s._v("#")]),s._v(" 数值与字符串")]),s._v(" "),a("p",[s._v("最佳实践")]),s._v(" "),a("ol",[a("li",[s._v("少写数字字面量\n"),a("ul",[a("li",[s._v("使用 enum 枚举类型改善代码")])])]),s._v(" "),a("li",[s._v("别在裸字符串处理上走太远")]),s._v(" "),a("li",[s._v("不必预计算字面量表达式\n"),a("ol",[a("li",[s._v("python解释器会自动优化，对性能没有影响，而且会增加代码的可读性")])])])]),s._v(" "),a("p",[s._v("实用技巧")]),s._v(" "),a("ol",[a("li",[s._v("布尔值其实也是“数字”")]),s._v(" "),a("li",[s._v("改善超长字符串的可读性\n"),a("ul",[a("li",[s._v("当多级缩进里出现多行字符串时 textwrap.dedent")]),s._v(" "),a("li",[s._v("大数字也可以变得更加可读 "),a("code",[s._v("10_000_000.0、0xABCD_DAAB")])])])]),s._v(" "),a("li",[s._v("别忘了那些 “r” 开头的内建字符串函数")]),s._v(" "),a("li",[s._v('使用“无穷大” float("inf")')])]),s._v(" "),a("p",[s._v("常见误区")]),s._v(" "),a("ol",[a("li",[s._v("“value += 1” 并非线程安全")]),s._v(" "),a("li",[s._v("字符串拼接并不慢")])]),s._v(" "),a("p",[s._v("结语：")]),s._v(" "),a("ul",[a("li",[s._v("编写代码时，请考虑阅读者的感受，不要出现太多神奇的字面量")]),s._v(" "),a("li",[s._v("当操作结构化字符串时，使用对象化模块比直接处理更有优势")]),s._v(" "),a("li",[s._v("dis 模块非常有用，请多多使用它验证你的猜测")]),s._v(" "),a("li",[s._v("多线程环境下的编码非常复杂，要足够谨慎，不要相信自己的直觉")]),s._v(" "),a("li",[s._v("Python 语言的更新非常快，不要被别人的经验所左右")])]),s._v(" "),a("h2",{attrs:{id:"_3-容器-list、tuple、dict、set等"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-容器-list、tuple、dict、set等"}},[s._v("#")]),s._v(" 3. 容器: list、tuple、dict、set等")]),s._v(" "),a("h2",{attrs:{id:"_4-边界处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-边界处理"}},[s._v("#")]),s._v(" 4. 边界处理")]),s._v(" "),a("ul",[a("li",[s._v("使用条件判断和异常捕获都可以用来处理边界情况")]),s._v(" "),a("li",[s._v("在 Python 里，我们更倾向于使用基于异常捕获的 EAFP 风格")]),s._v(" "),a("li",[s._v("使用 defaultdict / setdefault / pop 可以巧妙的处理当键不存在时的边界情况")]),s._v(" "),a("li",[s._v("对列表进行不存在的范围切片不会抛出异常")]),s._v(" "),a("li",[s._v("使用 "),a("code",[s._v("or")]),s._v(" 可以简化默认值边界处理逻辑，但也要注意不要掉入陷阱")]),s._v(" "),a("li",[s._v("不要手动去做数据校验，使用 "),a("code",[s._v("pydantic")]),s._v(" 或其他的数据校验模块")]),s._v(" "),a("li",[s._v("利用取模、绝对值计算等方式，可以简化一些特定的边界处理逻辑")])])])}),[],!1,null,null,null);t.default=r.exports}}]);