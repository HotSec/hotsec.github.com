(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{443:function(t,v,_){"use strict";_.r(v);var a=_(56),l=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"开发大型项目"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#开发大型项目"}},[t._v("#")]),t._v(" 开发大型项目")]),t._v(" "),_("h2",{attrs:{id:"常用工具"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常用工具"}},[t._v("#")]),t._v(" 常用工具")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("flake8")])]),t._v(" "),_("li",[_("p",[t._v("isort")])]),t._v(" "),_("li",[_("p",[t._v("black")])]),t._v(" "),_("li",[_("p",[t._v("pre-commit")]),t._v(" "),_("ul",[_("li",[t._v(".pre-commit-config.yaml")])])]),t._v(" "),_("li",[_("p",[t._v("mypy 静态类型检查")])])]),t._v(" "),_("h2",{attrs:{id:"单元测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[t._v("#")]),t._v(" 单元测试")]),t._v(" "),_("ul",[_("li",[t._v("unittest")]),t._v(" "),_("li",[t._v("pytest\n"),_("ul",[_("li",[t._v("pytest.mark.parametrize 表测试驱动")]),t._v(" "),_("li",[t._v("pytest.fixture 创建可复用的测试固定件")])])])]),t._v(" "),_("p",[t._v("TDD测试驱动开发")]),t._v(" "),_("h2",{attrs:{id:"有关单元测试的建议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#有关单元测试的建议"}},[t._v("#")]),t._v(" 有关单元测试的建议")]),t._v(" "),_("ul",[_("li",[t._v("写单元测试不是浪费时间")]),t._v(" "),_("li",[t._v("不要总想着‘补’单元测试")]),t._v(" "),_("li",[t._v("难测试的代码就是烂代码")]),t._v(" "),_("li",[t._v("像写应用代码一样对待测试代码")]),t._v(" "),_("li",[t._v("避免教条主义")])])])}),[],!1,null,null,null);v.default=l.exports}}]);