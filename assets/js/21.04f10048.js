(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{429:function(t,a,e){"use strict";e.r(a);var v=e(56),s=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"lua标准库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lua标准库"}},[t._v("#")]),t._v(" lua标准库")]),t._v(" "),e("p",[t._v("Lua标准库提供了一组丰富的函数，这些函数直接使用C语言API实现，并使用Lua编程语言构建。这些库提供Lua编程语言中的服务以及文件和数据库操作之外的服务。")]),t._v(" "),e("p",[t._v("这些在官方C语言API中构建的标准库作为单独的C模块提供。它包括以下内容")]),t._v(" "),e("ul",[e("li",[t._v("base: 最核心的基础库")]),t._v(" "),e("li",[t._v("package: 管理Lua的模块")]),t._v(" "),e("li",[t._v("string: 字符串相关函数")]),t._v(" "),e("li",[t._v("table: 表相关函数")]),t._v(" "),e("li",[t._v("math: 数学计算相关函数")]),t._v(" "),e("li",[t._v("io: 文件相关函数")]),t._v(" "),e("li",[t._v("os: 操作系统相关库")]),t._v(" "),e("li",[t._v("debug: 调试用的函数")])]),t._v(" "),e("h2",{attrs:{id:"base-最核心的基础库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#base-最核心的基础库"}},[t._v("#")]),t._v(" base: 最核心的基础库")]),t._v(" "),e("h2",{attrs:{id:"package-管理lua的模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#package-管理lua的模块"}},[t._v("#")]),t._v(" package: 管理Lua的模块")]),t._v(" "),e("h2",{attrs:{id:"string-字符串相关函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串相关函数"}},[t._v("#")]),t._v(" string: 字符串相关函数")]),t._v(" "),e("h2",{attrs:{id:"table-表相关函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-表相关函数"}},[t._v("#")]),t._v(" table: 表相关函数")]),t._v(" "),e("h2",{attrs:{id:"math-数学计算相关函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#math-数学计算相关函数"}},[t._v("#")]),t._v(" math: 数学计算相关函数")]),t._v(" "),e("h2",{attrs:{id:"io-文件相关函数库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io-文件相关函数库"}},[t._v("#")]),t._v(" io: 文件相关函数库")]),t._v(" "),e("p",[t._v("前辈们写的很好了，参考连接如下")]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"http://www.lua.org/manual/5.3/manual.html#6.8",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.lua.org/manual/5.3/manual.html#6.8"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://www.runoob.com/lua/lua-file-io.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.runoob.com/lua/lua-file-io.html"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://www.yiibai.com/lua/lua_file_io.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.yiibai.com/lua/lua_file_io.html"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"os-操作系统相关库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#os-操作系统相关库"}},[t._v("#")]),t._v(" os: 操作系统相关库")]),t._v(" "),e("p",[t._v("os库包含有操作系统和时间日期相关的函数。")]),t._v(" "),e("div",{staticClass:"language-lua line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[t._v("os"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo os.execute"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--阻塞的执行操作系统的命令")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- os.remove(filename) -- 文件删除")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- os.rename(oldname,newname) -- 文件重命名")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- os.date(format,time) -- 格式化时间")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%Y-%m-%d %H:%M:%S"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 打印当前时间 2019-10-13 20:57:21")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"debug-调试用的函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#debug-调试用的函数"}},[t._v("#")]),t._v(" debug: 调试用的函数")]),t._v(" "),e("p",[t._v("debug库提供一些调试用的函数，最好不要用在正式的生产代码中。")]),t._v(" "),e("p",[e("code",[t._v("debug.trackback()")]),t._v(" 输出函数调用栈，当发生错误时可以追踪Lua代码的执行情况。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("编号")]),t._v(" "),e("th",[t._v("函数声明")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("debug()")]),t._v(" "),e("td",[t._v("进入用于调试的交互模式，该模式保持活动状态，直到用户只输入一行中的cont并按Enter键。 用户可以使用其他功能在此模式下检查变量。")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("getfenv(object)")]),t._v(" "),e("td",[t._v("返回对象的环境。")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("gethook(optional thread)")]),t._v(" "),e("td",[t._v("返回线程的当前挂钩设置，有三个值 - 当前挂钩函数，当前挂钩掩码和当前挂钩计数。")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("getinfo(optional thread, function or stack level, optional flag)")]),t._v(" "),e("td",[t._v("返回一个包含函数信息的表。可以直接给出函数，或者可以给一个数字作为函数的值，在给定线程的调用堆栈的级别函数上运行的函数 - 级别0为当前函数(getinfo本身); 级别1为调用getinfo的函数;等等。 如果function是一个大于活动函数数的数字，则getinfo返回nil。")])]),t._v(" "),e("tr",[e("td",[t._v("5")]),t._v(" "),e("td",[t._v("getlocal(optional thread, stack level, local index)")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("6")]),t._v(" "),e("td",[t._v("getmetatable(value)")]),t._v(" "),e("td",[t._v("返回给定对象的元表，如果没有元表，则返回nil。")])]),t._v(" "),e("tr",[e("td",[t._v("7")]),t._v(" "),e("td",[t._v("getregistry()")]),t._v(" "),e("td",[t._v("返回注册表表，这是一个预定义的表，任何C语言代码都可以使用它来存储它需要存储的任何Lua值。")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("getupvalue(function, upvalue index)")]),t._v(" "),e("td",[t._v("此函数返回upvalue的名称和值，索引为函数func。 如果给定索引没有upvalue，则函数返回nil。")])]),t._v(" "),e("tr",[e("td",[t._v("9")]),t._v(" "),e("td",[t._v("setfenv(function or thread or userdata, environment table)")]),t._v(" "),e("td",[t._v("将给定对象的环境设置为给定表，返回对象。")])]),t._v(" "),e("tr",[e("td",[t._v("10")]),t._v(" "),e("td",[t._v('sethook(optional thread, hook function, hook mask string with "c" and/or "r" and/or "l", optional instruction count)')]),t._v(" "),e("td",[t._v("将给定函数设置为钩子。 字符串掩码和数字计数描述了何时调用挂钩。 这里，每次Lua调用，返回并分别输入函数中的每一行代码时，都会调用c，r和l。")])]),t._v(" "),e("tr",[e("td",[t._v("11")]),t._v(" "),e("td",[t._v("setlocal(optional thread, stack level, local index, value)")]),t._v(" "),e("td",[t._v("使用堆栈级别的函数的索引local将值赋给局部变量。 如果没有具有给定索引的局部变量，则该函数返回nil，并且当使用超出范围的级别调用时引发错误。 否则，它返回局部变量的名称。")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("setmetatable(value, metatable)")]),t._v(" "),e("td",[t._v("将给定对象的metatable设置为给定表(可以为nil)。")])]),t._v(" "),e("tr",[e("td",[t._v("13")]),t._v(" "),e("td",[t._v("setupvalue(function, upvalue index, value)")]),t._v(" "),e("td",[t._v("此函数使用函数func的索引up将值赋给upvalue。 如果给定索引没有upvalue，则函数返回nil。 否则，它返回upvalue的名称。")])]),t._v(" "),e("tr",[e("td",[t._v("14")]),t._v(" "),e("td",[t._v("traceback(optional thread, optional message string, optional level argument)")]),t._v(" "),e("td",[t._v("使用回溯构建扩展错误消息。")])])])]),t._v(" "),e("p",[e("img",{attrs:{src:"img/lua_debug1.png",alt:"lua_debug1"}})])])}),[],!1,null,null,null);a.default=s.exports}}]);