(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{455:function(e,l,v){"use strict";v.r(l);var _=v(56),i=Object(_.a)({},(function(){var e=this,l=e.$createElement,v=e._self._c||l;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"内置函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内置函数"}},[e._v("#")]),e._v(" 内置函数")]),e._v(" "),v("ul",[v("li",[e._v("类型转换\n"),v("ul",[v("li",[e._v("str(object='') 返回一个字符串")]),e._v(" "),v("li",[e._v("bytes")]),e._v(" "),v("li",[e._v("float(1)  转换为浮点数")]),e._v(" "),v("li",[e._v("chr(i)")]),e._v(" "),v("li",[e._v("ord(c)")]),e._v(" "),v("li",[e._v("int(x, base=10)")]),e._v(" "),v("li",[e._v("oct(x)")]),e._v(" "),v("li",[e._v("hex(x)")]),e._v(" "),v("li",[e._v("ascii(object)")]),e._v(" "),v("li",[e._v('bin(x) 将一个整数转换为带前缀 "0b" 的二进制数字符串')]),e._v(" "),v("li",[e._v("bool(x=False) 返回布尔值")]),e._v(" "),v("li",[e._v("complex(string) complex(real=0, imag=0) 将字符串或数字转换为复数")])])]),e._v(" "),v("li",[e._v("数学相关\n"),v("ul",[v("li",[e._v("abs(x) 返回数字的卷对值。")]),e._v(" "),v("li",[e._v("round(number, ndigits=None) 返回 number 舍入到小数点后 ndigits 位精度的值。 如果 ndigits 被省略或为 ，则返回最接近输入值的整数")]),e._v(" "),v("li",[e._v("max")]),e._v(" "),v("li",[e._v("min")]),e._v(" "),v("li",[e._v("sum(iterable, /, start=0) 从 start 开始自左向右对 iterable 的项求和并返回总计值。")]),e._v(" "),v("li",[e._v("pow(base, exp, mod=None) 返回 base 的 exp 次幂")]),e._v(" "),v("li",[e._v("divmod(a, b)")])])]),e._v(" "),v("li",[e._v("序列相关\n"),v("ul",[v("li",[e._v("len(s)")]),e._v(" "),v("li",[e._v("iter")]),e._v(" "),v("li",[e._v("aiter(async_iterable) 异步版 iter()")]),e._v(" "),v("li",[e._v("next")]),e._v(" "),v("li",[e._v("awaitable anext(async_iterator)")]),e._v(" "),v("li",[e._v("awaitable anext(async_iterator, default)  next()的异步版本")]),e._v(" "),v("li",[e._v("all(iterable) 如果iterable的所有元素均为真则返回True")]),e._v(" "),v("li",[e._v("any(iterable) 任一元素为真，则返回True")]),e._v(" "),v("li",[e._v("range(start, stop, step=1)")]),e._v(" "),v("li",[e._v("bytearray")]),e._v(" "),v("li",[e._v("list(iterable)")]),e._v(" "),v("li",[e._v("tuple(iterable)")]),e._v(" "),v("li",[e._v("dict")]),e._v(" "),v("li",[e._v("set(iterable)")]),e._v(" "),v("li",[e._v("frozenset(iterable=set())")]),e._v(" "),v("li",[e._v("enumerate(iterable, start=0)")]),e._v(" "),v("li",[e._v("filter(function, iterable)")]),e._v(" "),v("li",[e._v("map")]),e._v(" "),v("li",[e._v("zip(*iterables, strict=False) 在多个迭代器上并行迭代，从每个迭代器返回一个数据项组成元组。")]),e._v(" "),v("li",[e._v("reversed(seq)")]),e._v(" "),v("li",[e._v("sorted(iterable, /, *, key=None, reverse=False) 根据 iterable 中的项返回一个新的已排序列表。")])])]),e._v(" "),v("li",[e._v("类相关\n"),v("ul",[v("li",[e._v("class slice(start, stop, step=None) 返回一个切片对象")]),e._v(" "),v("li",[e._v("@classmethod")]),e._v(" "),v("li",[e._v("@staticmethod")]),e._v(" "),v("li",[e._v("class super(type, object_or_type=None) 访问已在类中被重载的继承方法很有用")]),e._v(" "),v("li",[e._v("hasattr(object, name)")]),e._v(" "),v("li",[e._v("getattr(object, name, default)")]),e._v(" "),v("li",[e._v("property")]),e._v(" "),v("li",[e._v("getattr")]),e._v(" "),v("li",[e._v("setattr")]),e._v(" "),v("li",[e._v("deleter")]),e._v(" "),v("li",[e._v("isinstance(object, classinfo)")]),e._v(" "),v("li",[e._v("issubclass(class, classinfo)")])])]),e._v(" "),v("li",[e._v("其它\n"),v("ul",[v("li",[e._v("print")]),e._v(" "),v("li",[e._v("input(prompt)")]),e._v(" "),v("li",[e._v("format")]),e._v(" "),v("li",[e._v("callable(objcet)")]),e._v(" "),v("li",[e._v("compile(source, filename, mode, flags=0, dont_inherit=False, optimize=- 1)")]),e._v(" "),v("li",[e._v("eval(expression, globals=None, locals=None)")]),e._v(" "),v("li",[e._v("exec(object, globals=None, locals=None, /, *, closure=None)")]),e._v(" "),v("li",[e._v("globals()")]),e._v(" "),v("li",[e._v("locals()")]),e._v(" "),v("li",[e._v("class type(object) 返回object的类型")]),e._v(" "),v("li",[e._v("type(name, bases, dict, **kwds) 返回一个新的 type 对象")]),e._v(" "),v("li",[e._v("vars(object) 返回模块、类、实例或任何其它具有 "),v("strong",[e._v("dict")]),e._v(" 属性的对象的 "),v("strong",[e._v("dict")]),e._v(" 属性。")]),e._v(" "),v("li",[e._v("id(object)")]),e._v(" "),v("li",[e._v("hash(object)")]),e._v(" "),v("li",[e._v("open")]),e._v(" "),v("li",[e._v("repr(object)")]),e._v(" "),v("li",[e._v("dir()")]),e._v(" "),v("li",[e._v("help()")]),e._v(" "),v("li",[e._v("breakpoint(*args, **kws) 断点")]),e._v(" "),v("li",[e._v("class memoryview(object) 返回由给定实参创建的“内存视图”对象")]),e._v(" "),v("li",[e._v("class object 返回一个不带特征的新对")]),e._v(" "),v("li",[v("strong",[e._v("import")]),e._v("(name, globals=None, locals=None, fromlist=(), level=0)")])])])])])}),[],!1,null,null,null);l.default=i.exports}}]);